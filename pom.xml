<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.foo</groupId>
	<artifactId>cassandra-driver-sample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Cassandra Driver Sample</name>
	<description>Sample of interrecation with pure cassandra driver</description>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<cassandra.driver.version>3.5.1</cassandra.driver.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.0</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.dkanejs.maven.plugins</groupId>
				<artifactId>docker-compose-maven-plugin</artifactId>
				<version>2.0.0</version>
				<executions>
					<execution>
						<id>docker-compose-up</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>up</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/src/test/resources/cassandra-single-node-cluster-docker-compose.yml</composeFile>
							<detachedMode>true</detachedMode>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-down</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>down</goal>
						</goals>
						<configuration>
							<composeFile>${project.basedir}/src/test/resources/cassandra-single-node-cluster-docker-compose.yml</composeFile>
							<removeVolumes>true</removeVolumes>
							<removeOrphans>true</removeOrphans>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-core</artifactId>
			<version>${cassandra.driver.version}</version>
		</dependency>
		<dependency>
			<!-- needed for java8 instant, dateTime, optional and arrays support see https://docs.datastax.com/en/developer/java-driver/latest/manual/custom_codecs/extras/ for json, guava, or 
				joda see other codecs -->
			<groupId>com.datastax.cassandra</groupId>
			<artifactId>cassandra-driver-extras</artifactId>
			<version>${cassandra.driver.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- compression - see https://docs.datastax.com/en/developer/java-driver/3.1/manual/compression/ for details -->
		<dependency>
			<!-- this is optional dependency, in case you want to compression on a client - enable it and add .withCompression(ProtocolOptions.Compression.LZ4) to cluster configuration -->
			<groupId>net.jpountz.lz4</groupId>
			<artifactId>lz4</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<!-- this is optional dependency, in case you want to compression on a client - enable it and add .withCompression(ProtocolOptions.Compression.SNAPPY) to cluster configuration -->
			<groupId>org.xerial.snappy</groupId>
			<artifactId>snappy-java</artifactId>
			<version>1.1.2.6</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
</project>